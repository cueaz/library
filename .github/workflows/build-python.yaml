name: Build and push images (python)

on:
  push:
    branches:
      - main
    paths:
      - python/**
  schedule:
    - cron: 0 */12 * * *
  workflow_dispatch:

concurrency:
  group: python
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMG_NAME: python
  PYTHON_VERSION: 3.11
  DEBIAN_VERSION: 12

jobs:
  vars:
    runs-on: ubuntu-latest

    steps:
      - run: pwd
  
    outputs:
      tag_base: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMG_NAME }}
      tag_end1: ${{ env.PYTHON_VERSION }}
      tag_end2: ${{ env.PYTHON_VERSION }}-debian${{ env.DEBIAN_VERSION }}
      context: '{{defaultContext}}:${{ env.IMG_NAME }}'
      labels: |
        org.opencontainers.image.source=${{ github.event.repository.html_url }}
        org.opencontainers.image.description=${{ github.event.repository.description }}
        org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
        org.opencontainers.image.revision=${{ github.sha }}
      build_args: |
        PYTHON_VERSION=${{ env.PYTHON_VERSION }}
        DEBIAN_VERSION=${{ env.DEBIAN_VERSION }}
  
  build-and-push-images:
    runs-on: ubuntu-latest
    needs: vars

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and check image (check)
        uses: docker/build-push-action@v5
        with:
          target: check
          context: ${{ needs.vars.outputs.context }}
          build-args: ${{ needs.vars.outputs.build_args }}

      - name: Build and push image (latest)
        uses: docker/build-push-action@v5
        with:
          target: latest
          context: ${{ needs.vars.outputs.context }}
          build-args: ${{ needs.vars.outputs.build_args }}
          push: true
          labels: ${{ env.LABELS }}
          tags: |
            ${{ needs.vars.outputs.tag_base }}
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end1 }}
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end2 }}

      - name: Build and push image (debug)
        uses: docker/build-push-action@v5
        with:
          target: debug
          context: ${{ needs.vars.outputs.context }}
          build-args: ${{ needs.vars.outputs.build_args }}
          push: true
          labels: ${{ env.LABELS }}
          tags: |
            ${{ needs.vars.outputs.tag_base }}:debug
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end1 }}-debug
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end2 }}-debug

      - name: Build and push image (nonroot)
        uses: docker/build-push-action@v5
        with:
          target: nonroot
          context: ${{ needs.vars.outputs.context }}
          build-args: ${{ needs.vars.outputs.build_args }}
          push: true
          labels: ${{ env.LABELS }}
          tags: |
            ${{ needs.vars.outputs.tag_base }}:nonroot
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end1 }}-nonroot
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end2 }}-nonroot

      - name: Build and push image (debug-nonroot)
        uses: docker/build-push-action@v5
        with:
          target: debug-nonroot
          context: ${{ needs.vars.outputs.context }}
          build-args: ${{ needs.vars.outputs.build_args }}
          push: true
          labels: ${{ env.LABELS }}
          tags: |
            ${{ needs.vars.outputs.tag_base }}:debug-nonroot
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end1 }}-debug-nonroot
            ${{ needs.vars.outputs.tag_base }}:${{ needs.vars.outputs.tag_end2 }}-debug-nonroot
